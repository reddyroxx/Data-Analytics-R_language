x
x<-1:20
x
x[16]
x<- c(1,2,3,4,5)
y<- c(6,7,8,9,0)
z<- 2*x+y
z
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_sqrt
my_div
swirl()
exit
swirl()
library("swirl")
swirl()
getwd()
ls()
x <- 9
ls()
list.dir()
dir()
>list.files
?list.files
list.files().args()
list.files.args()
args(list.files)
old.dir <- getwd()
testdir <- dir.create(getwd())
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path(getwd())
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length = 30)
my_seq <- seq(5,10,length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times = 40)
play()
type(rep(0,40))
typeof(rep(0,40))
typeof(rep(0,times = 40))
nxt()
rep(c(0,1,2),times=10)
rep(c(0,1,2),each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse= " ")
my_name <- c(my_char,"Pruthvi")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep = "-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na = is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[C(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
play()
?identical
nxt()
identical(vect,vect2)
vect["bar"]
vect[c('foo','bar')]
swirl()
install.packages("swirl")
install.packages("swirl")
library("swirl")
rm(list = ls())
swirl()
library("swirl")
swirl()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20 , nrow = 4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE , FALSE , FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE , FALSE , FALSE)
TRUE || c(TRUE , FALSE , FALSE)
5 > 8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
exit()
rm(list = ls())
library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div =2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x(1)},c(8,4,0))
play()
a = c(1,2,3)
a(1)
a[1]
nxt()
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
telegram("SUP Hello")
submit()
mad_libs(place='Bangalore',adjective='smart',noun='camera')
submit()
'I' %p% 'love' %p% 'R!'
rm(list=ls())
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- unique(flags)
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
play()
sample(1:5,10)
nxt()
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2 <- rep(rbinom(1,size=1,prob=0.7),100)
flips2 <- rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
rep(100,rpois(5,10))
replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3,"%B %d %Y %H:%M")
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
>plot
?plot
plot(x= cars$speed,y= cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x= cars$speed,y= cars$dist,xlab="Speed")
plot(x= cars$speed,y= cars$dist,ylab="Stopping Distance")
plot(x= cars$speed,y= cars$dist,ylab="Stopping Distance",xlab="Speed")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg ~ cyl)
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.package("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
library("swirl")
swirl()
plot(child ~ parent , galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child ~ parent ,galton)
abline(regrline,lwd=3,col='red')
summary(regrline)
fit <- lm(child ~ parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent0)
cov(fit$residuals,galton$parent)
setwd("/home/pruthvi/Desktop/Sem5/Data Analytics/Assignments/3rd")
dataset <- read.csv("NewYearResolution15.csv",TRUE,",")
library(dplyr)
library(plotly)
category <- array(unique(dataset$Resolution_Category))
#Gender wise comparison
male_cat_counts <- c()
female_cat_counts <- c()
for(i in 1:length(category)){
male_cat_counts[i] <- dim(subset(dataset,dataset$gender=="male" & dataset$Resolution_Category==category[i]))[1]
female_cat_counts[i] <- dim(subset(dataset,dataset$gender=="female" & dataset$Resolution_Category==category[i]))[1]
}
rm(list=ls())
setwd("/home/pruthvi/Desktop/Sem5/Data Analytics/Assignments/3rd")
dataset <- read.csv("TNAgri.csv",TRUE,",")
library(dplyr)
library(plotly)
districts <- unique(subset(dataset,select = c(District_Name)))
seasons <-unique(subset(dataset,select = c(Season)))
crops <- unique(subset(dataset,select = c(Crop)))
crops <- array(unlist(crops,use.names = FALSE))
max_areas_per_crop <- c()
avgs <- c()
c <- 1
for(i in 1:length(crops)){
k <- select(filter(dataset,dataset$Crop==crops[i]),Area)
avgs[i] <- sum(k)/dim(k)[1]
c <- c + 1
}
avgs <- sort(avgs,decreasing = TRUE)[1:8]
top_crops <- c()
its_avg <- c()
c <- 1
for(i in 1:length(crops)){
k <- select(filter(dataset,dataset$Crop==crops[i]),Area)
av <- sum(k)/dim(k)[1]
if(av %in% avgs){
top_crops[c] <- crops[i]
its_avg[c] <- av
c <- c+1
}
}
df_crop_area <- data.frame("Crop" = top_crops,"Max_Area" = its_avg)
print("Crops under consideration")
print(df_crop_area$Crop)
area_over_years <- arrange(subset(dataset,dataset$Crop %in% df_crop_area$Crop,select = c(Crop,Crop_Year,Area)),Crop,Crop_Year)
c <- c()
c_y <- unique(select(area_over_years,Crop,Crop_Year))
cr <- unique(array(c_y$Crop))
yr <- unique(unlist(c_y$Crop_Year,use.names = FALSE))
area_sum <- c()
count <- 1
crs <- c()
yrs <- c()
for(i in 1:length(cr)){
for(j in 1:length(yr)){
x <- subset(area_over_years,area_over_years$Crop==cr[i] & area_over_years$Crop_Year==yr[j],select = c(Area))
if(dim(x)[1]>0){
area_sum[count] <- sum(x)
crs[count] <- cr[i]
yrs[count] <- yr[j]
count <- count + 1
}
}
}
area_over_years_n <- data.frame("Crop" = crs,"Year" = yrs,"Area_Used" = area_sum)
crop1 <- subset(area_over_years_n,area_over_years_n$Crop=="Rice")
plot(crop1$Year,crop1$Area_Used,xlab = "Year",ylab = "Area",main = "Rice",type="h")
plot(crop1$Year,crop1$Area_Used,xlab = "Year",ylab = "Area",main = "Rice",type="p")
crop2 <- subset(area_over_years_n,area_over_years_n$Crop=="Coconut ")
plot(crop2$Year,crop2$Area_Used,xlab = "Year",ylab = "Area",main = "Coconut",type="h")
plot(crop2$Year,crop2$Area_Used,xlab = "Year",ylab = "Area",main = "Coconut",type="p")
crop3 <- subset(area_over_years_n,area_over_years_n$Crop=="Groundnut")
plot(crop3$Year,crop3$Area_Used,xlab = "Year",ylab = "Area",main = "Groundnut",type="h")
plot(crop3$Year,crop3$Area_Used,xlab = "Year",ylab = "Area",main = "Groundnut",type="p")
#Don't consider "Pulses total" and "Total foodgrain" because they sapn for
#only two years and it's not a single unique crop
crop4 <- subset(area_over_years_n,area_over_years_n$Crop=="Pulses total")
plot(crop4$Year,crop4$Area_Used,xlab = "Year",ylab = "Area",main = "Pulses total",type="h")
plot(crop4$Year,crop4$Area_Used,xlab = "Year",ylab = "Area",main = "Pulses total",type="p")
crop5 <- subset(area_over_years_n,area_over_years_n$Crop=="Total foodgrain")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Total foodgrain",type="h")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Total foodgrain",type="p")
#Therefore we consider the 6th and 7th
crop4 <- subset(area_over_years_n,area_over_years_n$Crop=="Jowar")
plot(crop4$Year,crop4$Area_Used,xlab = "Year",ylab = "Area",main = "Jowar",type="h")
plot(crop4$Year,crop4$Area_Used,xlab = "Year",ylab = "Area",main = "Jowar",type="p")
#Now "Guar seed" crop was cultivated only during 1999 ... not suitable for analysis over years
crop5 <- subset(area_over_years_n,area_over_years_n$Crop=="Guar seed")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Guar seed",type="h")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Guar seed",type="p")
#Considering 8th best
crop5 <- subset(area_over_years_n,area_over_years_n$Crop=="Sugarcane")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Sugarcane",type="h")
plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Sugarcane",type="p")
df_crop_area <- data.frame("Crop" = top_crops,"Max_Area" = its_avg)
area_over_years <- arrange(subset(dataset,dataset$Crop %in% df_crop_area$Crop,select = c(Crop,Crop_Year,Area)),Crop,Crop_Year)
c <- c()
c_y <- unique(select(area_over_years,Crop,Crop_Year))
cr <- unique(array(c_y$Crop))
yr <- unique(unlist(c_y$Crop_Year,use.names = FALSE))
area_sum <- c()
count <- 1
crs <- c()
yrs <- c()
for(i in 1:length(cr)){
for(j in 1:length(yr)){
x <- subset(area_over_years,area_over_years$Crop==cr[i] & area_over_years$Crop_Year==yr[j],select = c(Area))
if(dim(x)[1]>0){
area_sum[count] <- sum(x)
crs[count] <- cr[i]
yrs[count] <- yr[j]
count <- count + 1
}
}
}
area_over_years_n <- data.frame("Crop" = crs,"Year" = yrs,"Area_Used" = area_sum)
#plot data
crop1 <- subset(area_over_years_n,area_over_years_n$Crop=="Rice")
crop2 <- subset(area_over_years_n,area_over_years_n$Crop=="Coconut ")
crop3 <- subset(area_over_years_n,area_over_years_n$Crop=="Groundnut")
crop4 <- subset(area_over_years_n,area_over_years_n$Crop=="Jowar")
crop5 <- subset(area_over_years_n,area_over_years_n$Crop=="Sugarcane")
print(plot(crop1$Year,crop1$Area_Used,xlab = "Year",ylab = "Area",main = "Rice",type="p"))
print(plot(sort(crop2$Year),crop2$Area_Used,xlab = "Year",ylab = "Area",main = "Coconut",type="p"))
print(plot(crop3$Year,crop3$Area_Used,xlab = "Year",ylab = "Area",main = "Groundnut",type="p"))
print(plot(crop4$Year,crop4$Area_Used,xlab = "Year",ylab = "Area",main = "Jowar",type="p"))
print(plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Sugarcane",type="p"))
plot_ly(x=crop5$Year,y=crop5$Area_Used,type = "scatter",mode = "markers") %>%
layout(title= "Sugarcane" , xaxis = list(title = "Year"),yaxis = list(title = "Area"))
crop5 <- subset(area_over_years_n,area_over_years_n$Crop=="Sugarcane")
print(plot(crop5$Year,crop5$Area_Used,xlab = "Year",ylab = "Area",main = "Sugarcane",type="p"))
